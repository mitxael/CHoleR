<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:converters="clr-namespace:GraphSharp.Converters"
					xmlns:controls="clr-namespace:GraphSharp.Controls"
					xmlns:attachedBehaviours="clr-namespace:GraphSharp.AttachedBehaviours"
					xmlns:zoom="clr-namespace:GraphSharp.Controls.Zoom">

	<converters:EdgeRouteToPathConverter x:Key="RouteToPathConverter" />
	<converters:PointArrayToString x:Key="PointsToStringConverter" />
	<converters:DoubleToLog10Converter x:Key="Log10Converter" />
	<converters:EqualityToBooleanConverter x:Key="EqualityConverter" />
	<zoom:ZoomControl x:Key="sliderZoom_ValueChanged" />

	<Style TargetType="{x:Type controls:EdgeControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:EdgeControl}">
					<Canvas>
						<Path Stroke="{TemplateBinding Foreground}"
						  StrokeThickness="{TemplateBinding StrokeThickness}"
						  Fill="{TemplateBinding Fill}"
						  MinWidth="1"
						  MinHeight="1"
						  ToolTip="{TemplateBinding ToolTip}"
						  x:Name="edgePath">
							<Path.Data>
								<PathGeometry>
									<PathGeometry.Figures>
										<MultiBinding Converter="{StaticResource RouteToPathConverter}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Source.(controls:GraphCanvas.X)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Source.(controls:GraphCanvas.Y)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Source.ActualWidth" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Source.ActualHeight" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Target.(controls:GraphCanvas.X)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Target.(controls:GraphCanvas.Y)" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Target.ActualWidth" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="Target.ActualHeight" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
												 Path="RoutePoints" />
										</MultiBinding>
									</PathGeometry.Figures>
								</PathGeometry>
							</Path.Data>
						</Path>
						<controls:EdgeContentPresenter Content="{TemplateBinding Edge}" />
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="controls:GraphElementBehaviour.HighlightTrigger"
				Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
		<Setter Property="MinWidth"
				Value="1" />
		<Setter Property="MinHeight"
				Value="1" />
		<Setter Property="Background"
				Value="Red" />
		<Setter Property="Foreground"
				Value="Silver" />
		<Setter Property="Opacity"
				Value="0.5" />
		<Style.Triggers>
			<Trigger Property="controls:GraphElementBehaviour.IsHighlighted"
					 Value="True">
				<Setter Property="Foreground"
						Value="Black" />
			</Trigger>
			<Trigger Property="controls:GraphElementBehaviour.IsSemiHighlighted"
					 Value="True">
				<Setter Property="Foreground"
						Value="Yellow" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="InEdge" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground"
						Value="Red" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="OutEdge" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground"
						Value="Blue" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type controls:VertexControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:VertexControl}">
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							ToolTip="{TemplateBinding ToolTip}">
						<ContentPresenter Content="{TemplateBinding Vertex}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="controls:GraphElementBehaviour.HighlightTrigger"
				Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
		<Setter Property="attachedBehaviours:DragBehaviour.IsDragEnabled"
				Value="True" />
		<Setter Property="attachedBehaviours:DragBehaviour.X"
				Value="{Binding RelativeSource={RelativeSource Self},Path=(controls:GraphCanvas.X),Mode=TwoWay}" />
		<Setter Property="attachedBehaviours:DragBehaviour.Y"
				Value="{Binding RelativeSource={RelativeSource Self},Path=(controls:GraphCanvas.Y),Mode=TwoWay}" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Style.Triggers>
			<Trigger Property="controls:GraphElementBehaviour.IsHighlighted"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="Orange" />
				<Setter Property="BorderThickness"
						Value="2" />
			</Trigger>
			<Trigger Property="controls:GraphElementBehaviour.IsSemiHighlighted"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="Yellow" />
				<Setter Property="BorderThickness"
						Value="2" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="Source" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						Value="Red" />
				<Setter Property="BorderThickness"
						Value="2" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="Target" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						Value="Blue" />
				<Setter Property="BorderThickness"
						Value="2" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type controls:CompoundVertexControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CompoundVertexControl}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type controls:VertexControl}">
							<Setter Property="Background"
									Value="White" />
						</Style>
					</ControlTemplate.Resources>
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}">
						<Expander IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}">
							<Expander.Header>
								<ContentPresenter Content="{TemplateBinding Vertex}" ToolTip="{TemplateBinding ToolTip}" />
							</Expander.Header>

							<ItemsControl x:Name="PART_InnerCanvas"
										  ItemsSource="{TemplateBinding Vertices}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
							</ItemsControl>
						</Expander>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Setter Property="controls:GraphElementBehaviour.HighlightTrigger"
				Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
		<Setter Property="attachedBehaviours:DragBehaviour.IsDragEnabled"
				Value="True" />
		<Setter Property="attachedBehaviours:DragBehaviour.X"
				Value="{Binding RelativeSource={RelativeSource Self},Path=(controls:GraphCanvas.X),Mode=TwoWay}" />
		<Setter Property="attachedBehaviours:DragBehaviour.Y"
				Value="{Binding RelativeSource={RelativeSource Self},Path=(controls:GraphCanvas.Y),Mode=TwoWay}" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="BorderBrush"
				Value="Silver" />
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0"
									 EndPoint="1,1">
					<GradientStop Color="White"
								  Offset="0" />
					<GradientStop Color="BurlyWood"
								  Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="LayoutMode"
					 Value="Automatic">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type controls:CompoundVertexControl}">
							<Border BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}">
								<Expander IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}">
									<Expander.Header>
										<ContentPresenter Content="{TemplateBinding Vertex}" />
									</Expander.Header>

									<ItemsControl x:Name="PART_InnerCanvas"
												  ItemsSource="{TemplateBinding Vertices}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<controls:GraphCanvas Background="White" />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
									</ItemsControl>
								</Expander>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0"
											 EndPoint="1,1">
							<GradientStop Color="White"
										  Offset="0" />
							<GradientStop Color="Silver"
										  Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="controls:GraphElementBehaviour.IsHighlighted"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="Orange" />
				<Setter Property="BorderThickness"
						Value="2" />
			</Trigger>
			<Trigger Property="controls:GraphElementBehaviour.IsSemiHighlighted"
					 Value="True">
				<Setter Property="BorderBrush"
						Value="Yellow" />
				<Setter Property="BorderThickness"
						Value="2" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="Source" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						Value="Red" />
				<Setter Property="BorderThickness"
						Value="2" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
							   Value="True" />
					<Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
							   Value="Target" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						Value="Blue" />
				<Setter Property="BorderThickness"
						Value="2" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type zoom:ZoomControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type zoom:ZoomControl}">
					<Grid>
						<Border BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								ClipToBounds="{TemplateBinding ClipToBounds}">
							<zoom:ZoomContentPresenter x:Name="PART_Presenter" ClipToBounds="False" />
						</Border>
						<Border Padding="5" Margin="5"
								CornerRadius="5"
								Background="#FF606060"
								Opacity="0.4"
								Width="275"
								Height="40"
								VerticalAlignment="Top"
								HorizontalAlignment="Left">
							<StackPanel Orientation="Horizontal">
								<ToggleButton Content="1:1" Width="55"
											  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource EqualityConverter},ConverterParameter={x:Static zoom:ZoomControlModes.Original}}" />
								<ToggleButton Content="Fill" Width="55"
											  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource EqualityConverter},ConverterParameter={x:Static zoom:ZoomControlModes.Fill}}" />
								<ToggleButton Content="Custom" Width="55"
											  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Mode,Converter={StaticResource EqualityConverter},ConverterParameter={x:Static zoom:ZoomControlModes.Custom}}" />
								
								<!--************  MITXAEL: Added slider ************ <START> *********** -->
								<!--<Slider Name="sliderZoom" Orientation="Vertical"
										ValueChanged="{Binding Path=ZoomBar, Source={StaticResource sliderZoom_ValueChanged}}"
										HorizontalAlignment="Center"
										Margin="0,0,0,5"
										Grid.Row="1" Grid.Column="0"
										Minimum="25" Maximum="200" Value="100"
										SmallChange="25" LargeChange="25"
										TickFrequency="25" TickPlacement="BottomRight"
										IsSnapToTickEnabled="True"/>-->
								<!--************  MITXAEL: Added slider ************ <END> *********** -->

								<TextBlock
									Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='Zoom: {0:P2}'}"
									Foreground="DarkGray"
									VerticalAlignment="Center" Margin="5,0,0,0" />
							</StackPanel>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Setter Property="Background" Value="White" />
		<Setter Property="ClipToBounds" Value="True" />
		
		<Style.Triggers>
			<Trigger Property="ModifierMode" Value="Pan">
				<Setter Property="Cursor" Value="SizeAll" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>