<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:graphsharp="clr-namespace:GraphSharp;assembly=GraphSharp"
                    xmlns:controls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
                    xmlns:zoom="clr-namespace:GraphSharp.Controls.Zoom;assembly=GraphSharp.Controls"
                    xmlns:helpers="clr-namespace:GraphSharp.Helpers;assembly=GraphSharp.Controls"
                    xmlns:converters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
                    xmlns:local="clr-namespace:CHoleR"
                    xmlns:helper="clr-namespace:CHoleR.Helper"
                    x:Class="CHoleR.Design.Edges">

    <!-- ********************  EDGE HIGHLIGHTS ******************** <START> ******************** -->

    <!--CHANGED TO SET HIGHLIGHTED EDGE-->
    <SolidColorBrush x:Key="HighlightedEdgeBrush" Color="{DynamicResource EdgeHighlighted}" />
    <!--CHANGED TO DISPLAY IN AND OUT EDGES THE SAME COLOR-->
    <!--<SolidColorBrush x:Key="SemiHighlightedInEdgeBrush" Color="#FF1DBA00" />-->
    <SolidColorBrush x:Key="SemiHighlightedInEdgeBrush" Color="#FFD6A51C" />
    <SolidColorBrush x:Key="SemiHighlightedOutEdgeBrush" Color="#FFD6A51C" />
    <!-- ********************  EDGE HIGHLIGHTS ******************** <END> ******************** -->


    <!-- ********************  EDGE CONTROLS ******************** <START> ******************** -->

    <converters:EdgeRouteToPathConverter x:Key="RouteToPathConverter"/>
    
    <local:EdgeColorConverter x:Key="EdgeToEdgeColorConverter"/>

    <Style TargetType="{x:Type controls:EdgeControl}">

        <!-- ********** START ********** Edge weights as tooltip-->
        <!--<Style.Resources>
            <ToolTip x:Key="ToolTipContent">
                <StackPanel>
                    <TextBlock x:Name="EdgeWeigth" FontWeight="Bold" Text="{Binding Weight}"/>
                </StackPanel>
            </ToolTip>
        </Style.Resources>
        <Setter Property="ToolTip" Value="{StaticResource ToolTipContent}"/>-->
        <!-- ********** END ********** Edge weights as tooltip-->

        <EventSetter Event="MouseDoubleClick" Handler="ChangeEdgeColor_OnClick"/>

        <!--<Setter Property="Foreground" Value="#7eaddb" />-->
        <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Edge.EdgeColor, Converter={StaticResource edgeToEdgeColorConverter}}"/>-->
        <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Edge.EdgeColor, Converter={StaticResource edgeToEdgeColorConverter}}"/>-->
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Edge.Color, Converter={StaticResource EdgeToEdgeColorConverter}, Mode=TwoWay}"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:EdgeControl}">
                    <Canvas >
                        <Path Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="{TemplateBinding StrokeThickness}"
                                      StrokeEndLineCap="Flat"
                                      StrokeStartLineCap="Flat"
                                      MinWidth="0.1"
                                      MinHeight="1"
                                      ToolTip="{TemplateBinding ToolTip}"
                                      x:Name="edgePath">
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <MultiBinding Converter="{StaticResource RouteToPathConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Source.(controls:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Source.(controls:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Source.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Source.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Target.(controls:GraphCanvas.X)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Target.(controls:GraphCanvas.Y)" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Target.ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="Target.ActualHeight" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="RoutePoints" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                             Path="ShowArrows" />
                                        </MultiBinding>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <!--Display weight!!-->
                        <helper:EdgeContentPresenter Content="{Binding Edge.Weight, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="controls:GraphElementBehaviour.HighlightTrigger"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <!--EDGES COLORS-->
        <Setter Property="ShowArrows" Value="false" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Opacity" Value="0.5" />
        <Style.Triggers>
            <Trigger Property="controls:GraphElementBehaviour.IsHighlighted"
                             Value="True">
                <Setter Property="Foreground"
                                Value="{DynamicResource HighlightedEdgeBrush}" />
            </Trigger>
            <Trigger Property="controls:GraphElementBehaviour.IsSemiHighlighted"
                             Value="True">
                <Setter Property="Foreground"
                                Value="{DynamicResource HighlightedEdgeBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
                                       Value="True" />
                    <Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
                                       Value="InEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                                Value="{DynamicResource SemiHighlightedInEdgeBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="controls:GraphElementBehaviour.IsSemiHighlighted"
                                       Value="True" />
                    <Condition Property="controls:GraphElementBehaviour.SemiHighlightInfo"
                                       Value="OutEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                                Value="{DynamicResource SemiHighlightedOutEdgeBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!-- ********************  EDGE CONTROLS ******************** <END> ******************** -->

</ResourceDictionary>